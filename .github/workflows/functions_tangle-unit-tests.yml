name: Functions | Tangle - Emulated Unit Tests

on:
  pull_request:
    paths:
      - packages/functions/**
      - packages/database/**

jobs:
  npm-install:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm run build:functions

  chunk_0:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/address.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/auction-tangle/auction.bit.tangle.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_1.spec.ts 
  chunk_1:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_4.spec.ts 
  chunk_2:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award-tangle/award-tangle_7.spec.ts 
  chunk_3:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_1_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_10.spec.ts 
  chunk_4:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_11.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_12.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_2.spec.ts 
  chunk_5:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_5.spec.ts 
  chunk_6:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_8.spec.ts 
  chunk_7:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/award/award_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_10.spec.ts 
  chunk_8:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_11_a.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_11_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_11_c.spec.ts 
  chunk_9:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_11_d.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_12.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_13.spec.ts 
  chunk_10:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_14.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_15.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_16.spec.ts 
  chunk_11:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_17.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_18.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_19.spec.ts 
  chunk_12:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_4.spec.ts 
  chunk_13:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_7.spec.ts 
  chunk_14:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_8.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/base-token-trading/base-token-trading_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_1.spec.ts 
  chunk_15:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_10.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_11.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_12.spec.ts 
  chunk_16:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_13.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_4_a.spec.ts 
  chunk_17:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_4_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_4_c.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_5.spec.ts 
  chunk_18:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_8.spec.ts 
  chunk_19:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_1_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_1.spec.ts 
  chunk_20:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_10.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_3_b.spec.ts 
  chunk_21:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_5_b.spec.ts 
  chunk_22:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_7.spec.ts 
  chunk_23:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_8.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/metadata-nft/mint-metadata-nft_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_1_b.spec.ts 
  chunk_24:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_10.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_2.spec.ts 
  chunk_25:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_5.spec.ts 
  chunk_26:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_8.spec.ts 
  chunk_27:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_1_a.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_1_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_1_c.spec.ts 
  chunk_28:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-airdrop/minted-token-airdrop_5.spec.ts 
  chunk_29:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_3.spec.ts 
  chunk_30:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_6.spec.ts 
  chunk_31:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-claim/token.claim.minted_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_10.spec.ts 
  chunk_32:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_11.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_12_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_12.spec.ts 
  chunk_33:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_13.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_14_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_14.spec.ts 
  chunk_34:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_16.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_17.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_18.spec.ts 
  chunk_35:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_19.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_2_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_2.spec.ts 
  chunk_36:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_20.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_21.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_22.spec.ts 
  chunk_37:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_23.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_24.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_3.spec.ts 
  chunk_38:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_6.spec.ts 
  chunk_39:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_8.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_9.spec.ts 
  chunk_40:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bid/nft-bid.otr_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bid/nft-bid.otr_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bid/nft-bid.otr_3.spec.ts 
  chunk_41:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bid/nft-bid.otr_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_2.spec.ts 
  chunk_42:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_5.spec.ts 
  chunk_43:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-bulk/order.bulk_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-set-for-sale/nft-set-for-sale_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-set-for-sale/nft-set-for-sale_2.spec.ts 
  chunk_44:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-set-for-sale/nft-set-for-sale_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_10.spec.ts 
  chunk_45:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_2_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_3.spec.ts 
  chunk_46:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_6.spec.ts 
  chunk_47:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_8.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-staking/nft-staking_9.spec.ts 
  chunk_48:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_3.spec.ts 
  chunk_49:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_6.spec.ts 
  chunk_50:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/nft-transfer/nft-transfer_8.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/proposal-tangle/proposal.approval.spec.ts 
  chunk_51:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/proposal-tangle/proposal.create.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/proposal-tangle/proposal.simple.vote.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/proposal-tangle/proposal.stake.voting.spec.ts 
  chunk_52:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/proposal-tangle/proposal.token.voting.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/soon_snap/soon.snap.claim.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.accept.member.spec.ts 
  chunk_53:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.block.member.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.create.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.decline.member.spec.ts 
  chunk_54:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.edit.guardian.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.join.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/space-tangle/space.leave.spec.ts 
  chunk_55:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/staking/staking_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/staking/staking_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/staking/staking_3.spec.ts 
  chunk_56:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/staking/staking_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/staking/staking_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_1_a.spec.ts 
  chunk_57:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_1_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_3.spec.ts 
  chunk_58:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/stamp-tangle/stamp-tangle_6.spec.ts 
  chunk_59:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_3_a.spec.ts 
  chunk_60:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_3_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_5.spec.ts 
  chunk_61:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/swap/swap_8.spec.ts 
  chunk_62:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/tangleRequest/simple.token.trade.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/tangleRequest/tangle-request.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token-import/token.import_1.spec.ts 
  chunk_63:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token-import/token.import_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/stake.voting.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/token.based.voting_1.spec.ts 
  chunk_64:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/token.based.voting_2.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/token.based.voting_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/token.based.voting_4.spec.ts 
  chunk_65:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.based.voting/token.based.voting_5.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.mint/token.mint_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.mint/token.mint_2.spec.ts 
  chunk_66:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.mint/token.mint_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/token.mint/token.mint_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/trade-base-token-order.spec.ts 
  chunk_67:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/tran.match.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_10.spec.ts 
  chunk_68:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_11.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_12.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_13.spec.ts 
  chunk_69:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_14.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_15.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_2.spec.ts 
  chunk_70:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_5.spec.ts 
  chunk_71:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_8.spec.ts 
  chunk_72:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/transaction-trigger/transaction-trigger_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/web3/web3_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/web3/web3_2.spec.ts 
  chunk_73:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/web3/web3_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_1_a.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_1_b.spec.ts 
  chunk_74:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_1_c.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_10_1.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_10_2.spec.ts 
  chunk_75:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_10_3.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_11.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_12_a.spec.ts 
  chunk_76:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_12_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_13.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_14.spec.ts 
  chunk_77:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_15.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_16.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_2.spec.ts 
  chunk_78:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_4_b.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_4.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_5.spec.ts 
  chunk_79:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_6.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_7.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_8.spec.ts 
  chunk_80:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/withdraw-deposit-nft/deposit-withraw-nft_9.spec.ts &&
          npm run test -- --findRelatedTests --forceExit ./test-tangle/workflow.spec.ts 
  chunk_81:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/collection-minting/collection-minting_3.only.spec.ts 
  chunk_82:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-nft-trading/minted-nft-trading_11.only.spec.ts 
  chunk_83:
    needs: npm-install
    environment: development
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: buildcore
          POSTGRES_PASSWORD: postgres
          POSTGRES_MAX_CONNECTIONS: 400
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        with:
          path: |
           node_modules
           packages/functions/node_modules
           packages/interfaces/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package.json') }}
      - name: Set env vars
        working-directory: packages/functions
        run: |
          echo "$ENV_VARS" > .env
          echo "$SERVICE_ACCOUNT" > sa.json
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Init
        run: npm run build:functions
      - name: Test
        working-directory: packages/functions
        run: |
          npm run start &
          npm run notifier &
          npm run test -- --findRelatedTests --forceExit ./test-tangle/minted-token-trade/minted-token-trade_15.only.spec.ts 
