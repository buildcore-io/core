name: Action | Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy_functions:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set env vars
        working-directory: packages/functions
        run: echo "$FUNCTIONS_ENV_VARS" >> .env
        env:
          FUNCTIONS_ENV_VARS: ${{ secrets.FUNCTIONS_ENV_VARS_PROD }}
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions,firestore:indexes -P soonaverse -f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  roll-firestore:
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 360
    needs: [deploy_functions, deploy_hosting]
    defaults:
      run:
        working-directory: packages/functions
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '10'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          npm i -g ts-node
          cd ../../ && npm run build:functions
      - name: Set env vars
        run: echo "$FUNCTIONS_ENV_VARS" >> .env
        env:
          FUNCTIONS_ENV_VARS: ${{ secrets.FUNCTIONS_ENV_VARS_PROD }}
      - name: Create serviceAccountKey.json
        run: echo "$SERVICE_ACCOUNT" >> scripts/serviceAccountKey.json
        env:
          SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOONAVERSE }}
      - name: Roll firestore
        run: cd scripts && ts-node db.upgrade.ts
