name: Action | Deploy to Production

on:
  release:
    types: [published]

jobs:
  deploy_search:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: Set env vars
        working-directory: packages/search
        run: echo "$ENV_VARS" > .env
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
      - name: Build image
        run: |
            cp packages/search/Dockerfile .
            gcloud builds submit --tag gcr.io/$GOOGLE_CLOUD_PROJECT/search
      - name: Deploy
        run: |
            gcloud run deploy search \
              --image gcr.io/$GOOGLE_CLOUD_PROJECT/search \
              --min-instances=3 \
              --memory=1Gi \
              --cpu=1 \
              --concurrency=1000 \
              --allow-unauthenticated \
              --timeout=600 \
              --ingress=internal-and-cloud-load-balancing \
              --add-cloudsql-instances $GOOGLE_CLOUD_PROJECT:us-central1:$GOOGLE_CLOUD_PROJECT \
              --region=us-central1 \

  deploy_functions:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: Set env vars
        working-directory: packages/functions
        run: echo "$ENV_VARS" > .env
        env:
          ENV_VARS: ${{ secrets.ENV_VARS }}
      - name: Build and deploy
        run: |
            npm run build:functions
            npm run create-deploy-script
            chmod 777 ./deploy.sh
            ./deploy.sh

  deploy_to_npm:
    runs-on: ubuntu-latest
    environment: production
    env:
      NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - name: Init
        run: |
          npm version ${{ github.event.release.tag_name }} --workspace packages/interfaces
          npm version ${{ github.event.release.tag_name }} --workspace packages/sdk
          npm run build:sdk
      - name: Deploy to npm
        run: |
          npm publish --workspace packages/interfaces
          cd packages/sdk/lib && npm publish
