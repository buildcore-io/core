/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Mock, ERC20MockInterface } from "../ERC20Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600581526020017f322e322e3000000000000000000000000000000000000000000000000000000081525060069080519060200190620000519291906200025a565b503480156200005f57600080fd5b5060405162001d0138038062001d018339818101604052810190620000859190620004e2565b828281600490805190602001906200009f9291906200025a565b508060059080519060200190620000b89291906200025a565b505050620000cd3382620000d660201b60201c565b5050506200071e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000149576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014090620005dd565b60405180910390fd5b6200015d600083836200025060201b60201c565b80600360008282546200017191906200062e565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254620001c991906200062e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200023091906200069c565b60405180910390a36200024c600083836200025560201b60201c565b5050565b505050565b505050565b8280546200026890620006e8565b90600052602060002090601f0160209004810192826200028c5760008555620002d8565b82601f10620002a757805160ff1916838001178555620002d8565b82800160010185558215620002d8579182015b82811115620002d7578251825591602001919060010190620002ba565b5b509050620002e79190620002eb565b5090565b5b8082111562000306576000816000905550600101620002ec565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003738262000328565b810181811067ffffffffffffffff8211171562000395576200039462000339565b5b80604052505050565b6000620003aa6200030a565b9050620003b8828262000368565b919050565b600067ffffffffffffffff821115620003db57620003da62000339565b5b620003e68262000328565b9050602081019050919050565b60005b8381101562000413578082015181840152602081019050620003f6565b8381111562000423576000848401525b50505050565b6000620004406200043a84620003bd565b6200039e565b9050828152602081018484840111156200045f576200045e62000323565b5b6200046c848285620003f3565b509392505050565b600082601f8301126200048c576200048b6200031e565b5b81516200049e84826020860162000429565b91505092915050565b6000819050919050565b620004bc81620004a7565b8114620004c857600080fd5b50565b600081519050620004dc81620004b1565b92915050565b600080600060608486031215620004fe57620004fd62000314565b5b600084015167ffffffffffffffff8111156200051f576200051e62000319565b5b6200052d8682870162000474565b935050602084015167ffffffffffffffff81111562000551576200055062000319565b5b6200055f8682870162000474565b92505060406200057286828701620004cb565b9150509250925092565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005c5601f836200057c565b9150620005d2826200058d565b602082019050919050565b60006020820190508181036000830152620005f881620005b6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200063b82620004a7565b91506200064883620004a7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000680576200067f620005ff565b5b828201905092915050565b6200069681620004a7565b82525050565b6000602082019050620006b360008301846200068b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200070157607f821691505b60208210811415620007185762000717620006b9565b5b50919050565b6115d3806200072e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063572b6c051161008c57806395d89b411161006657806395d89b4114610275578063a457c2d714610293578063a9059cbb146102c3578063dd62ed3e146102f3576100ea565b8063572b6c05146101f757806370a08231146102275780637da0a87714610257576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a9578063486ff0cd146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f7610323565b6040516101049190610e3d565b60405180910390f35b61012760048036038101906101229190610ef8565b6103b5565b6040516101349190610f53565b60405180910390f35b6101456103d3565b6040516101529190610f7d565b60405180910390f35b61017560048036038101906101709190610f98565b6103dd565b6040516101829190610f53565b60405180910390f35b6101936104d5565b6040516101a09190611007565b60405180910390f35b6101c360048036038101906101be9190610ef8565b6104de565b6040516101d09190610f53565b60405180910390f35b6101e161058a565b6040516101ee9190610e3d565b60405180910390f35b610211600480360381019061020c9190611022565b610618565b60405161021e9190610f53565b60405180910390f35b610241600480360381019061023c9190611022565b610671565b60405161024e9190610f7d565b60405180910390f35b61025f6106ba565b60405161026c919061105e565b60405180910390f35b61027d6106e3565b60405161028a9190610e3d565b60405180910390f35b6102ad60048036038101906102a89190610ef8565b610775565b6040516102ba9190610f53565b60405180910390f35b6102dd60048036038101906102d89190610ef8565b610860565b6040516102ea9190610f53565b60405180910390f35b61030d60048036038101906103089190611079565b61087e565b60405161031a9190610f7d565b60405180910390f35b606060048054610332906110e8565b80601f016020809104026020016040519081016040528092919081815260200182805461035e906110e8565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b60006103c96103c2610905565b8484610914565b6001905092915050565b6000600354905090565b60006103ea848484610adf565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610435610905565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac9061118c565b60405180910390fd5b6104c9856104c1610905565b858403610914565b60019150509392505050565b60006012905090565b60006105806104eb610905565b8484600260006104f9610905565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461057b91906111db565b610914565b6001905092915050565b60068054610597906110e8565b80601f01602080910402602001604051908101604052809291908181526020018280546105c3906110e8565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b505050505081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600580546106f2906110e8565b80601f016020809104026020016040519081016040528092919081815260200182805461071e906110e8565b801561076b5780601f106107405761010080835404028352916020019161076b565b820191906000526020600020905b81548152906001019060200180831161074e57829003601f168201915b5050505050905090565b60008060026000610784610905565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610841576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610838906112a3565b60405180910390fd5b61085561084c610905565b85858403610914565b600191505092915050565b600061087461086d610905565b8484610adf565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061090f610d63565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610984576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097b90611335565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb906113c7565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ad29190610f7d565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4690611459565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb6906114eb565b60405180910390fd5b610bca838383610d9a565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c489061157d565b60405180910390fd5b818103600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ce691906111db565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d4a9190610f7d565b60405180910390a3610d5d848484610d9f565b50505050565b60006014600036905010158015610d7f5750610d7e33610618565b5b15610d9357601436033560601c9050610d97565b3390505b90565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dde578082015181840152602081019050610dc3565b83811115610ded576000848401525b50505050565b6000601f19601f8301169050919050565b6000610e0f82610da4565b610e198185610daf565b9350610e29818560208601610dc0565b610e3281610df3565b840191505092915050565b60006020820190508181036000830152610e578184610e04565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8f82610e64565b9050919050565b610e9f81610e84565b8114610eaa57600080fd5b50565b600081359050610ebc81610e96565b92915050565b6000819050919050565b610ed581610ec2565b8114610ee057600080fd5b50565b600081359050610ef281610ecc565b92915050565b60008060408385031215610f0f57610f0e610e5f565b5b6000610f1d85828601610ead565b9250506020610f2e85828601610ee3565b9150509250929050565b60008115159050919050565b610f4d81610f38565b82525050565b6000602082019050610f686000830184610f44565b92915050565b610f7781610ec2565b82525050565b6000602082019050610f926000830184610f6e565b92915050565b600080600060608486031215610fb157610fb0610e5f565b5b6000610fbf86828701610ead565b9350506020610fd086828701610ead565b9250506040610fe186828701610ee3565b9150509250925092565b600060ff82169050919050565b61100181610feb565b82525050565b600060208201905061101c6000830184610ff8565b92915050565b60006020828403121561103857611037610e5f565b5b600061104684828501610ead565b91505092915050565b61105881610e84565b82525050565b6000602082019050611073600083018461104f565b92915050565b600080604083850312156110905761108f610e5f565b5b600061109e85828601610ead565b92505060206110af85828601610ead565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110057607f821691505b60208210811415611114576111136110b9565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611176602883610daf565b91506111818261111a565b604082019050919050565b600060208201905081810360008301526111a581611169565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111e682610ec2565b91506111f183610ec2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611226576112256111ac565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061128d602583610daf565b915061129882611231565b604082019050919050565b600060208201905081810360008301526112bc81611280565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061131f602483610daf565b915061132a826112c3565b604082019050919050565b6000602082019050818103600083015261134e81611312565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006113b1602283610daf565b91506113bc82611355565b604082019050919050565b600060208201905081810360008301526113e0816113a4565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611443602583610daf565b915061144e826113e7565b604082019050919050565b6000602082019050818103600083015261147281611436565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006114d5602383610daf565b91506114e082611479565b604082019050919050565b60006020820190508181036000830152611504816114c8565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611567602683610daf565b91506115728261150b565b604082019050919050565b600060208201905081810360008301526115968161155a565b905091905056fea2646970667358221220ba484ac4de41cd22685cbf9c2c9e876a160d75ac23727b7a182bf9d4f28edd5164736f6c63430008090033";

export class ERC20Mock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Mock> {
    return super.deploy(
      name,
      symbol,
      initialSupply,
      overrides || {}
    ) as Promise<ERC20Mock>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    initialSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      initialSupply,
      overrides || {}
    );
  }
  attach(address: string): ERC20Mock {
    return super.attach(address) as ERC20Mock;
  }
  connect(signer: Signer): ERC20Mock__factory {
    return super.connect(signer) as ERC20Mock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20MockInterface {
    return new utils.Interface(_abi) as ERC20MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC20Mock;
  }
}
