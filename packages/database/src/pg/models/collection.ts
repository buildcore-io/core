/**
 * This file was automatically generated by knex
 * Do not modify this file manually
 */
import * as commons from './common';

export interface PgCollectionVotes extends commons.BaseSubRecord {
  direction?: number;
}

export interface PgCollectionStats extends commons.BaseSubRecord {
  votes_upvotes?: number;
  votes_downvotes?: number;
  votes_voteDiff?: number;
  ranks_count?: number;
  ranks_sum?: number;
  ranks_avg?: number;
}

export interface PgCollectionRanks extends commons.BaseSubRecord {
  rank?: number;
}

export interface PgCollection extends commons.BaseRecord {
  name?: string;
  description?: string;
  bannerUrl?: string;
  royaltiesFee?: number;
  royaltiesSpace?: string;
  total?: number;
  totalTrades?: number;
  lastTradedOn?: Date;
  sold?: number;
  discord?: string;
  url?: string;
  twitter?: string;
  approved?: boolean;
  rejected?: boolean;
  limitedEdition?: boolean;
  ipfsMedia?: string;
  ipfsMetadata?: string;
  ipfsRoot?: string;
  category?: string;
  type?: number;
  access?: number;
  accessAwards?: string[];
  accessCollections?: string[];
  space?: string;
  availableFrom?: Date;
  price?: number;
  availablePrice?: number;
  onePerMemberOnly?: boolean;
  placeholderNft?: string;
  placeholderUrl?: string;
  status?: string;
  mintingData_address?: string;
  mintingData_network?: string;
  mintingData_mintedOn?: Date;
  mintingData_mintedBy?: string;
  mintingData_blockId?: string;
  mintingData_nftId?: string;
  mintingData_storageDeposit?: number;
  mintingData_aliasBlockId?: string;
  mintingData_aliasId?: string;
  mintingData_aliasStorageDeposit?: number;
  mintingData_mintingOrderId?: string;
  mintingData_nftsToMint?: number;
  mintingData_nftMediaToUpload?: number;
  mintingData_nftMediaToPrepare?: number;
  mintingData_unsoldMintingOptions?: string;
  mintingData_newPrice?: number;
  mintingData_nftsStorageDeposit?: number;
  rankCount?: number;
  rankSum?: number;
  rankAvg?: number;
  mediaStatus?: string;
  mediaUploadErrorCount?: number;
  stakedNft?: number;
  nftsOnSale?: number;
  nftsOnAuction?: number;
  availableNfts?: number;
  floorPrice?: number;
  votes_upvotes?: number;
  votes_downvotes?: number;
  votes_voteDiff?: number;
  discounts?: Record<string, unknown>[];
}
