/**
 * This file was automatically generated by knex
 * Do not modify this file manually
 */
import * as commons from './common';

export interface PgMilestoneTransactions extends commons.BaseSubRecord {
  PayloadSize?: number;
  blockId?: string;
  milestone?: number;
  payload?: Record<string, unknown>;
  processed?: boolean;
  processedOn?: Date;
}

export interface PgMilestoneSmrTransactions extends commons.BaseSubRecord {
  PayloadSize?: number;
  blockId?: string;
  milestone?: number;
  payload?: Record<string, unknown>;
  processed?: boolean;
  processedOn?: Date;
}

export interface PgMilestoneSmr extends commons.BaseRecord {
  completed?: boolean;
  completedOn?: Date;
  listenerNodeId?: string;
  milestone?: number;
  milestoneTimestamp?: Date;
  trxConflictCount?: number;
  trxFailedCount?: number;
  trxValidCount?: number;
}

export interface PgMilestoneRmsT2Transactions extends commons.BaseSubRecord {
  PayloadSize?: number;
  blockId?: string;
  milestone?: number;
  payload?: Record<string, unknown>;
  processed?: boolean;
  processedOn?: Date;
}

export interface PgMilestoneRmsT2 extends commons.BaseRecord {
  completed?: boolean;
  completedOn?: Date;
  listenerNodeId?: string;
  milestone?: number;
  milestoneTimestamp?: Date;
  trxConflictCount?: number;
  trxFailedCount?: number;
  trxValidCount?: number;
}

export interface PgMilestone extends commons.BaseRecord {
  completed?: boolean;
  completedOn?: Date;
  listenerNodeId?: string;
  milestone?: number;
  milestoneTimestamp?: Date;
  trxConflictCount?: number;
  trxFailedCount?: number;
  trxValidCount?: number;
}
